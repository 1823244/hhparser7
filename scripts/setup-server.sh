#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Ubuntu 20.04.5 —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –¥–µ–ø–ª–æ—è hhparser5
# –ó–∞–ø—É—Å–∫–∞—Ç—å –æ—Ç –∏–º–µ–Ω–∏ root –∏–ª–∏ —Å sudo

set -e

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è hhparser5..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[$(date +'%Y-%m-%d %H:%M:%S')] WARNING: $1${NC}"
}

error() {
    echo -e "${RED}[$(date +'%Y-%m-%d %H:%M:%S')] ERROR: $1${NC}"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ root –ø—Ä–∞–≤
if [[ $EUID -ne 0 ]]; then
   error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è —Å –ø—Ä–∞–≤–∞–º–∏ root (sudo)"
fi

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
log "–û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É..."
apt update && apt upgrade -y

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
log "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã..."
apt install -y \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg \
    lsb-release \
    git \
    htop \
    vim \
    ufw \
    fail2ban \
    unzip \
    wget

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker
log "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker..."
if ! command -v docker &> /dev/null; then
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –≤–µ—Ä—Å–∏–∏
    apt remove -y docker docker-engine docker.io containerd runc 2>/dev/null || true
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π GPG –∫–ª—é—á Docker
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π Docker
    echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker
    apt update
    apt install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∏ –≤–∫–ª—é—á–∞–µ–º Docker
    systemctl start docker
    systemctl enable docker
    
    log "Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ"
else
    log "Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose (standalone)
log "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker Compose..."
if ! command -v docker-compose &> /dev/null; then
    DOCKER_COMPOSE_VERSION="v2.21.0"
    curl -L "https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    chmod +x /usr/local/bin/docker-compose
    log "Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    log "Docker Compose —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
log "–°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è hhparser..."
if ! id "hhparser" &>/dev/null; then
    useradd -m -s /bin/bash hhparser
    usermod -aG docker hhparser
    log "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å hhparser —Å–æ–∑–¥–∞–Ω"
else
    log "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å hhparser —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
log "–°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
mkdir -p /opt/hhparser
mkdir -p /var/log/hhparser
mkdir -p /opt/hhparser/backups

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
chown -R hhparser:hhparser /opt/hhparser
chown -R hhparser:hhparser /var/log/hhparser

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ UFW (—Ñ–∞–π—Ä–≤–æ–ª)
log "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ñ–∞–π—Ä–≤–æ–ª..."
ufw --force reset
ufw default deny incoming
ufw default allow outgoing

# –†–∞–∑—Ä–µ—à–∞–µ–º SSH
ufw allow ssh

# –†–∞–∑—Ä–µ—à–∞–µ–º HTTP –∏ HTTPS
ufw allow 80/tcp
ufw allow 443/tcp

# –†–∞–∑—Ä–µ—à–∞–µ–º –ø–æ—Ä—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
ufw allow 9595/tcp

# –í–∫–ª—é—á–∞–µ–º —Ñ–∞–π—Ä–≤–æ–ª
ufw --force enable

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Fail2ban
log "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Fail2ban..."
cat > /etc/fail2ban/jail.local << 'EOF'
[DEFAULT]
bantime = 3600
findtime = 600
maxretry = 5

[sshd]
enabled = true
port = ssh
logpath = /var/log/auth.log
EOF

systemctl restart fail2ban
systemctl enable fail2ban

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥—Ä–æ—Ç–∞—Ü–∏–∏
log "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–æ—Ç–∞—Ü–∏—é –ª–æ–≥–æ–≤..."
cat > /etc/logrotate.d/hhparser << 'EOF'
/var/log/hhparser/*.log {
    daily
    missingok
    rotate 14
    compress
    delaycompress
    notifempty
    copytruncate
}
EOF

# –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
log "–°–æ–∑–¥–∞–µ–º systemd —Å–µ—Ä–≤–∏—Å..."
cat > /etc/systemd/system/hhparser.service << 'EOF'
[Unit]
Description=HHParser5 Application
Requires=docker.service
After=docker.service

[Service]
Type=oneshot
RemainAfterExit=yes
WorkingDirectory=/opt/hhparser
ExecStart=/usr/local/bin/docker-compose -f docker-compose.prod.yml up -d
ExecStop=/usr/local/bin/docker-compose -f docker-compose.prod.yml down
User=hhparser
Group=hhparser

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
log "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥..."
apt install -y htop iotop nethogs

# –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –¥–ª—è Java –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
log "–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É –¥–ª—è Java..."
echo "vm.swappiness=10" >> /etc/sysctl.conf
echo "vm.max_map_count=262144" >> /etc/sysctl.conf
sysctl -p

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –±—ç–∫–∞–ø–∞ –ë–î
log "–°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –±—ç–∫–∞–ø–∞ –ë–î..."
cat > /opt/hhparser/backup-db.sh << 'EOF'
#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –±—ç–∫–∞–ø–∞ PostgreSQL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
BACKUP_DIR="/opt/hhparser/backups"
DATE=$(date +%Y%m%d_%H%M%S)
DB_NAME="hhparser5"
BACKUP_FILE="${BACKUP_DIR}/hhparser5_backup_${DATE}.sql"

# –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø
docker exec hhparser-postgres pg_dump -U postgres -d ${DB_NAME} > "${BACKUP_FILE}"

# –°–∂–∏–º–∞–µ–º –±—ç–∫–∞–ø
gzip "${BACKUP_FILE}"

# –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –±—ç–∫–∞–ø—ã (—Å—Ç–∞—Ä—à–µ 7 –¥–Ω–µ–π)
find ${BACKUP_DIR} -name "*.sql.gz" -mtime +7 -delete

echo "Backup completed: ${BACKUP_FILE}.gz"
EOF

chmod +x /opt/hhparser/backup-db.sh
chown hhparser:hhparser /opt/hhparser/backup-db.sh

# –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á—É –≤ cron –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –±—ç–∫–∞–ø–∞
log "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –±—ç–∫–∞–ø..."
(crontab -u hhparser -l 2>/dev/null; echo "0 2 * * * /opt/hhparser/backup-db.sh") | crontab -u hhparser -

# –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏—Å—Ç–µ–º–µ
log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ:"
echo "  üêß OS: $(lsb_release -d | cut -f2)"
echo "  üê≥ Docker: $(docker --version)"
echo "  üì¶ Docker Compose: $(docker-compose --version)"
echo "  üî• UFW Status: $(ufw status | head -1)"
echo ""
echo "üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π:"
echo "  /opt/hhparser/          - –û—Å–Ω–æ–≤–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
echo "  /var/log/hhparser/      - –õ–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
echo "  /opt/hhparser/backups/  - –ë—ç–∫–∞–ø—ã –ë–î"
echo ""
echo "üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 'hhparser' —Å–æ–∑–¥–∞–Ω –∏ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É docker"
echo ""
echo "üîÑ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "  1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ /opt/hhparser/"
echo "  2. –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏"
echo "  3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: sudo systemctl start hhparser"
echo ""
echo "üéâ –°–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤ –∫ –¥–µ–ø–ª–æ—é!"
