#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è hhparser5 –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω —Å–µ—Ä–≤–µ—Ä
# –ó–∞–ø—É—Å–∫–∞—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –æ—Ç –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è hhparser

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
APP_DIR="/opt/hhparser"
BACKUP_DIR="${APP_DIR}/backups"
REGISTRY="ghcr.io"
IMAGE_NAME="1823244/hhparser7"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à GitHub username
IMAGE_TAG="${1:-latest}"

# –§—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[$(date +'%Y-%m-%d %H:%M:%S')] WARNING: $1${NC}"
}

error() {
    echo -e "${RED}[$(date +'%Y-%m-%d %H:%M:%S')] ERROR: $1${NC}"
    exit 1
}

info() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')] INFO: $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
if [[ $EUID -eq 0 ]]; then
   error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ù–ï –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –æ—Ç root. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è hhparser"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker
if ! command -v docker &> /dev/null; then
    error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
cd "${APP_DIR}" || error "–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–µ—Ä–µ–π—Ç–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é ${APP_DIR}"

log "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π hhparser5..."
info "–û–±—Ä–∞–∑: ${REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}"

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
check_health() {
    local max_attempts=30
    local attempt=1
    
    log "–ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    
    while [ $attempt -le $max_attempts ]; do
        if curl -f -s http://localhost:9595/actuator/health > /dev/null; then
            log "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
            return 0
        fi
        
        info "–ü–æ–ø—ã—Ç–∫–∞ $attempt/$max_attempts: –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤–æ..."
        sleep 10
        ((attempt++))
    done
    
    error "‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –ø–æ—Å–ª–µ $max_attempts –ø–æ–ø—ã—Ç–æ–∫"
}

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–∞ –ë–î
create_backup() {
    if docker ps | grep -q "hhparser-postgres"; then
        log "–°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
        ./backup-db.sh || warn "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø –ë–î"
    else
        warn "PostgreSQL –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –±—ç–∫–∞–ø"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫–∞—Ç–∞ –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏
rollback() {
    warn "–ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–∫–∞—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏..."
    
    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –æ–±—Ä–∞–∑
    local previous_image=$(docker images --format "table {{.Repository}}:{{.Tag}}\t{{.CreatedAt}}" | grep "${REGISTRY}/${IMAGE_NAME}" | grep -v "latest" | head -1 | awk '{print $1}')
    
    if [ -n "$previous_image" ]; then
        info "–û—Ç–∫–∞—Ç—ã–≤–∞–µ–º—Å—è –∫ –æ–±—Ä–∞–∑—É: $previous_image"
        
        # –¢–µ–≥–∏—Ä—É–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –æ–±—Ä–∞–∑ –∫–∞–∫ latest
        docker tag "$previous_image" "${REGISTRY}/${IMAGE_NAME}:latest"
        
        # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
        docker-compose -f docker-compose.prod.yml down
        docker-compose -f docker-compose.prod.yml up -d
        
        check_health && log "‚úÖ –û—Ç–∫–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ" || error "‚ùå –û—Ç–∫–∞—Ç –Ω–µ —É–¥–∞–ª—Å—è"
    else
        error "–ù–µ –Ω–∞–π–¥–µ–Ω –ø—Ä–µ–¥—ã–¥—É—â–∏–π –æ–±—Ä–∞–∑ –¥–ª—è –æ—Ç–∫–∞—Ç–∞"
    fi
}

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –æ—Ç–∫–∞—Ç–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ
trap 'error "–î–µ–ø–ª–æ–π –ø—Ä–µ—Ä–≤–∞–Ω! –í—ã–ø–æ–ª–Ω—è–µ–º –æ—Ç–∫–∞—Ç..."; rollback' ERR

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è .env —Ñ–∞–π–ª–∞
if [ ! -f ".env" ]; then
    warn ".env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"
    warn "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–æ–∑–¥–∞—Ç—å .env —Ñ–∞–π–ª —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è docker-compose.prod.yml
if [ ! -f "docker-compose.prod.yml" ]; then
    error "–§–∞–π–ª docker-compose.prod.yml –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –õ–æ–≥–∏–Ω–∏–º—Å—è –≤ registry –µ—Å–ª–∏ –Ω—É–∂–Ω–æ (–¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤)
if [ -n "${GITHUB_TOKEN}" ]; then
    log "–í—ã–ø–æ–ª–Ω—è–µ–º –≤—Ö–æ–¥ –≤ GitHub Container Registry..."
    echo "${GITHUB_TOKEN}" | docker login ghcr.io -u "${GITHUB_USERNAME}" --password-stdin
fi

# –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø –ø–µ—Ä–µ–¥ –¥–µ–ø–ª–æ–µ–º
create_backup

# –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞—Ö
log "–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker-compose -f docker-compose.prod.yml ps || true

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
log "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose -f docker-compose.prod.yml down

# –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—Ä–∞–∑—ã
log "–û–±–Ω–æ–≤–ª—è–µ–º Docker –æ–±—Ä–∞–∑—ã..."
if [ "${IMAGE_TAG}" != "latest" ]; then
    # –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ç–µ–≥, —Å–∫–∞—á–∏–≤–∞–µ–º –µ–≥–æ
    docker pull "${REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}"
    docker tag "${REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}" "${REGISTRY}/${IMAGE_NAME}:latest"
else
    # –ò–Ω–∞—á–µ –æ–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –æ–±—Ä–∞–∑—ã
    docker-compose -f docker-compose.prod.yml pull
fi

# –û—á–∏—â–∞–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –æ–±—Ä–∞–∑—ã
log "–û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã..."
docker image prune -f

# –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
log "–ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose -f docker-compose.prod.yml up -d

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
log "–°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker-compose -f docker-compose.prod.yml ps

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
check_health

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
log "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"
docker-compose -f docker-compose.prod.yml logs --tail=20 hhparser-app

# –û—á–∏—â–∞–µ–º –∫—ç—à Docker –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –º–µ—Å—Ç–∞
log "–û—á–∏—â–∞–µ–º Docker –∫—ç—à..."
docker system prune -f

# –û—Ç–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ (–¥–µ–ø–ª–æ–π —É—Å–ø–µ—à–µ–Ω)
trap - ERR

log "üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
info "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://193.108.113.75:9595"
info "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://193.108.113.75:9090 (Prometheus)"
info "–ì—Ä–∞—Ñ–∏–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ –∞–¥—Ä–µ—Å—É: http://193.108.113.75:3000 (Grafana)"

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
echo ""
log "üìä –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:"
docker stats --no-stream --format "table {{.Container}}\t{{.CPUPerc}}\t{{.MemUsage}}\t{{.MemPerc}}"
