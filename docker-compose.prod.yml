version: '3.8'

services:
  # PostgreSQL база данных
  postgres:
    image: postgres:15-alpine
    container_name: hhparser-postgres
    environment:
      POSTGRES_DB: hhparser5
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/main/resources/db/migration:/docker-entrypoint-initdb.d:ro
    ports:
      - "5444:5432"
    networks:
      - hhparser-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Spring Boot приложение
  hhparser-app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: hhparser-app
    environment:
      SPRING_PROFILES_ACTIVE: ruvds
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5444/hhparser5
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      SPRING_RABBITMQ_HOST: ${RABBITMQ_HOST:-cow-01.rmq2.cloudamqp.com}
      SPRING_RABBITMQ_PORT: ${RABBITMQ_PORT:-5672}
      SPRING_RABBITMQ_USERNAME: ${RABBITMQ_USERNAME:-}
      SPRING_RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD:-}
      SPRING_RABBITMQ_VIRTUAL_HOST: ${RABBITMQ_VHOST:-}
      JAVA_OPTS: "-Xmx1g -Xms512m -XX:+UseG1GC"
    ports:
      - "9696:9696"
    volumes:
      - logs_data:/log-hhparser7
    networks:
      - hhparser-network
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9696/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: hhparser-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - logs_data:/var/log/nginx
    networks:
      - hhparser-network
    restart: unless-stopped
    depends_on:
      - hhparser-app

  # Мониторинг Prometheus (опционально)
  prometheus:
    image: prom/prometheus:latest
    container_name: hhparser-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - hhparser-network
    restart: unless-stopped
    profiles:
      - monitoring

  # Grafana для визуализации (опционально)
  grafana:
    image: grafana/grafana:latest
    container_name: hhparser-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - hhparser-network
    restart: unless-stopped
    profiles:
      - monitoring

volumes:
  postgres_data:
    driver: local
  logs_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  hhparser-network:
    driver: bridge
